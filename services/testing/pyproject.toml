[tool.poetry]
name = "testing"
version = "0.0.0"
description = "Micro service for testing"
authors = ["GigantPro <pochtagigantpro@gmail.com>"]
license = "GPLv3 License (GPLv3)"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.1"
uvicorn = "^0.24.0.post1"
sqlalchemy = "^2.0.23"
asyncpg = "^0.29.0"
loguru = "^0.7.2"
alembic = {extras = ["sqlalchemy"], version = "^1.13.0"}
load-dotenv = "^0.1.0"
aiohttp = "^3.9.1"
ruff = "^0.1.7"
psycopg2-binary = "^2.9.9"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
select = [
    "F",   # https://beta.ruff.rs/docs/rules/#pyflakes-f
    "W",   # https://beta.ruff.rs/docs/rules/#warning-w
    "E",   # https://beta.ruff.rs/docs/rules/#error-e
    "I",   # https://beta.ruff.rs/docs/rules/#isort-i
    "N",   # https://beta.ruff.rs/docs/rules/#pep8-naming-n
    "ANN", # https://beta.ruff.rs/docs/rules/#flake8-annotations-ann
    "B",   # https://beta.ruff.rs/docs/rules/#flake8-bugbear-b
    "RUF", # https://beta.ruff.rs/docs/rules/#ruff-specific-rules-ruf
    "PT",  # https://beta.ruff.rs/docs/rules/#flake8-pytest-style-pt
]
include = ["*.py"]
force-exclude = true
fixable = ["ALL"]

exclude = [".mypy_cache", ".ruff_cache", ".venv", "__pypackages__", "alembic"]
line-length = 120

ignore = [
    "B008",  # do not perform function calls in argument defaults
    "ANN101",  # Missing type annotation for `self` in method
    "RUF009",  # Do not perform function call `get_str_env` in dataclass defaults
]
