version: '3.4'

services:
  postgres:
    image: postgres
    hostname: postgres
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      DB_PORT: 5000
      PGDATA: /data/postgres
    command: 
      - -p 5000
    volumes:
      - /opt/xiver/projects_data/edu/db/data:/data/postgres
      - /opt/xiver/projects_data/edu/db/de:/docker-entrypoint-initdb.d
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - postgres
  
  postgres2:
    image: postgres
    hostname: postgres2
    restart: unless-stopped
    env_file:
      - ./.env
    environment:
      DB_PORT: 4999
      PGDATA: /data/postgres
    command: 
      - -p 4999
    volumes:
      - /opt/xiver/projects_data/edu/db2/data:/data/postgres
      - /opt/xiver/projects_data/edu/db2/de:/docker-entrypoint-initdb.d
    ports:
      - 4999:4999
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - postgres2

  backend:
    depends_on:
      - postgres
    hostname: backend
    environment:
      - DEBUG=false
      - DB_HOST=postgres
      - DB_PORT=5000
    env_file: 
      - ./.env
    build:
      context: ./backend
      dockerfile: Dockerfile
    networks:
      - postgres
      - nginx
      - tests
    ports:
      - 5001:5001
    restart: "on-failure"
    volumes:
      - /opt/xiver/projects_data/edu/solutions:/app/solutions
      - /opt/xiver/projects_data/edu/public:/app/public
  
  tests:
    depends_on:
      - postgres2
    hostname: tests
    environment:
      - DEBUG=false
      - DB_HOST=postgres2
      - DB_PORT=4999
    env_file: 
      - ./.env
    build:
      context: ./services/testing
      dockerfile: Dockerfile.dev
    networks:
      - postgres2
      - tests
      - nginx
    ports:
      - 5003:5001
    volumes:
      - /opt/xiver/projects_data/edu/services/testing:/app
      - /opt/xiver/projects_data/edu/solutions:/solutions
      - /var/run/docker.sock:/var/run/docker.sock:rw
    restart: "on-failure"
  
  notify:
    hostname: notify
    environment:
      - DEBUG=false
    env_file: 
      - ./.env
    build:
      context: ./services/notify
      dockerfile: Dockerfile.dev
    networks:
      - nginx
    volumes:
      - /opt/xiver/projects_data/edu/services/notify:/app
    restart: "on-failure"

  frontend:
    build:
      dockerfile: Dockerfile
      context: ./frontend
    hostname: frontend
    env_file: 
      - ./.env
    networks:
      - nginx
    restart: "on-failure"

  nginx:
    depends_on:
      - frontend
      - backend
    build:
      dockerfile: Dockerfile
      context: ./nginx
    networks:
      - nginx
    ports:
       - 83:80
    restart: "on-failure"
  
  service-test:
    image: alpine
    depends_on:
      - nginx
      - frontend
      - backend
      - postgres
    command: sleep 10s

networks:
  postgres:
    driver: bridge
  nginx:
    driver: bridge
  postgres2:
    driver: bridge
  tests:
    driver: bridge
