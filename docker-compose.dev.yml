version: '3.4'

services:
  postgres:
    image: postgres
    hostname: postgres
    restart: unless-stopped
    env_file:
      - ./.env.dev
    environment:
      DB_PORT: 5000
      PGDATA: /data/postgres
    command: 
      - -p 5000
    volumes:
      - ./postgres_dev_data:/data/postgres
    ports:
      - 5000:5000
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - postgres
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
  
  postgres2:
    image: postgres
    hostname: postgres2
    restart: unless-stopped
    env_file:
      - ./.env.dev
    environment:
      DB_PORT: 4999
      PGDATA: /data/postgres
    command: 
      - -p 4999
    volumes:
      - ./postgres_dev_data2:/data/postgres
    ports:
      - 4999:4999
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - tests
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
  
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
      - postgres2
    user: root
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      DEBUG: 'False'
    volumes:
       - ./pgadmin:/var/lib/pgadmin
    networks:
      - postgres
      - tests
    ports:
      - "5050:80"
    restart: unless-stopped

  backend-dev:
    depends_on:
      - postgres
    hostname: backend
    environment:
      - DEBUG=true
      - DB_HOST=postgres
      - DB_PORT=5000
    env_file: 
      - ./.env.dev
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    networks:
      - postgres
      - nginx
    ports:
      - 5001:5001
    volumes:
      - ./backend:/app
  
  tests-dev:
    depends_on:
      - postgres2
    hostname: tests
    environment:
      - DEBUG=true
      - DB_HOST=postgres2
      - DB_PORT=4999
    env_file: 
      - ./.env.dev
    build:
      context: ./services/testing
      dockerfile: Dockerfile.dev
    networks:
      - nginx
      - tests
    ports:
      - 5003:5001
    volumes:
      - ./services/testing:/app
    
  frontend-dev:
    depends_on:
      - backend-dev
    hostname: frontend
    env_file: 
      - ./.env.dev
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    networks:
      - postgres
      - nginx
    ports:
      - 5002:5002
      - 24678:24678
    volumes:
      - ./frontend:/app

  nginx:
    depends_on:
      - backend-dev
      - tests-dev
      - frontend-dev
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    networks:
      - nginx
    ports:
      - 80:80

networks:
  postgres:
    driver: bridge
  nginx:
    driver: bridge
  tests:
    driver: bridge
